// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createSonarjsRules allows passing custom rules 1`] = `
{
  "sonarjs/cognitive-complexity": "off",
  "sonarjs/elseif-without-else": "warn",
  "sonarjs/max-switch-cases": [
    "error",
    15,
  ],
  "sonarjs/no-all-duplicated-branches": "error",
  "sonarjs/no-collapsible-if": "error",
  "sonarjs/no-collection-size-mischeck": "warn",
  "sonarjs/no-duplicate-string": "error",
  "sonarjs/no-duplicated-branches": "error",
  "sonarjs/no-element-overwrite": "error",
  "sonarjs/no-empty-collection": "off",
  "sonarjs/no-extra-arguments": "off",
  "sonarjs/no-gratuitous-expressions": "off",
  "sonarjs/no-identical-conditions": "error",
  "sonarjs/no-identical-expressions": "error",
  "sonarjs/no-identical-functions": "error",
  "sonarjs/no-ignored-return": "error",
  "sonarjs/no-inverted-boolean-check": "error",
  "sonarjs/no-nested-switch": "warn",
  "sonarjs/no-nested-template-literals": "off",
  "sonarjs/no-one-iteration-loop": "error",
  "sonarjs/no-redundant-boolean": "error",
  "sonarjs/no-redundant-jump": "error",
  "sonarjs/no-same-line-conditional": "off",
  "sonarjs/no-small-switch": "warn",
  "sonarjs/no-unused-collection": "error",
  "sonarjs/no-use-of-empty-return-value": "error",
  "sonarjs/no-useless-catch": "error",
  "sonarjs/non-existent-operator": "warn",
  "sonarjs/prefer-immediate-return": "warn",
  "sonarjs/prefer-object-literal": "error",
  "sonarjs/prefer-single-boolean-return": "error",
  "sonarjs/prefer-while": "error",
}
`;

exports[`createSonarjsRules matches snapshot with typescript 1`] = `
{
  "sonarjs/cognitive-complexity": "warn",
  "sonarjs/elseif-without-else": "warn",
  "sonarjs/max-switch-cases": [
    "error",
    15,
  ],
  "sonarjs/no-all-duplicated-branches": "error",
  "sonarjs/no-collapsible-if": "error",
  "sonarjs/no-collection-size-mischeck": "warn",
  "sonarjs/no-duplicate-string": "error",
  "sonarjs/no-duplicated-branches": "error",
  "sonarjs/no-element-overwrite": "error",
  "sonarjs/no-empty-collection": "off",
  "sonarjs/no-extra-arguments": "off",
  "sonarjs/no-gratuitous-expressions": "off",
  "sonarjs/no-identical-conditions": "error",
  "sonarjs/no-identical-expressions": "error",
  "sonarjs/no-identical-functions": "error",
  "sonarjs/no-ignored-return": "error",
  "sonarjs/no-inverted-boolean-check": "error",
  "sonarjs/no-nested-switch": "warn",
  "sonarjs/no-nested-template-literals": "off",
  "sonarjs/no-one-iteration-loop": "error",
  "sonarjs/no-redundant-boolean": "error",
  "sonarjs/no-redundant-jump": "error",
  "sonarjs/no-same-line-conditional": "off",
  "sonarjs/no-small-switch": "warn",
  "sonarjs/no-unused-collection": "error",
  "sonarjs/no-use-of-empty-return-value": "error",
  "sonarjs/no-useless-catch": "error",
  "sonarjs/non-existent-operator": "warn",
  "sonarjs/prefer-immediate-return": "warn",
  "sonarjs/prefer-object-literal": "error",
  "sonarjs/prefer-single-boolean-return": "error",
  "sonarjs/prefer-while": "error",
}
`;

exports[`createSonarjsRules matches snapshot without typescript 1`] = `
{
  "sonarjs/cognitive-complexity": "warn",
  "sonarjs/elseif-without-else": "warn",
  "sonarjs/max-switch-cases": [
    "error",
    15,
  ],
  "sonarjs/no-all-duplicated-branches": "error",
  "sonarjs/no-collapsible-if": "error",
  "sonarjs/no-collection-size-mischeck": "warn",
  "sonarjs/no-duplicate-string": "error",
  "sonarjs/no-duplicated-branches": "error",
  "sonarjs/no-element-overwrite": "error",
  "sonarjs/no-empty-collection": "warn",
  "sonarjs/no-extra-arguments": "error",
  "sonarjs/no-gratuitous-expressions": "off",
  "sonarjs/no-identical-conditions": "error",
  "sonarjs/no-identical-expressions": "error",
  "sonarjs/no-identical-functions": "error",
  "sonarjs/no-ignored-return": "error",
  "sonarjs/no-inverted-boolean-check": "error",
  "sonarjs/no-nested-switch": "warn",
  "sonarjs/no-nested-template-literals": "off",
  "sonarjs/no-one-iteration-loop": "error",
  "sonarjs/no-redundant-boolean": "error",
  "sonarjs/no-redundant-jump": "error",
  "sonarjs/no-same-line-conditional": "off",
  "sonarjs/no-small-switch": "warn",
  "sonarjs/no-unused-collection": "error",
  "sonarjs/no-use-of-empty-return-value": "error",
  "sonarjs/no-useless-catch": "error",
  "sonarjs/non-existent-operator": "warn",
  "sonarjs/prefer-immediate-return": "warn",
  "sonarjs/prefer-object-literal": "error",
  "sonarjs/prefer-single-boolean-return": "error",
  "sonarjs/prefer-while": "error",
}
`;
